openapi: 3.0.0
info:
  title: Documentação da API Swagger para o Sistema de Gerenciamento de Livros e Autores
  description: |
    Bem-vindo ao **Sistema de Gerenciamento de Livros e Autores**! Esta API foi projetada para gerenciar uma coleção de autores e seus livros. Ela permite que os usuários criem, leiam, atualizem e excluam informações sobre autores e suas respectivas obras. Seja você um leitor ávido, um bibliotecário ou um gerente de livraria, esta API fornece as ferramentas necessárias para acompanhar o seu mundo literário.

    ### Visão Geral da API
    A API está dividida em dois principais recursos:
    - **Autores**
    - **Livros**

    Cada recurso suporta vários métodos HTTP para realizar operações CRUD (Criar, Ler, Atualizar e Excluir).
  version: 1.0.0
servers:
  - url: http://localhost:3000
paths:
  /api/autores:
    post:
      summary: Create a new author
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                  example: João Silva
                bio:
                  type: string
                  example: Autor de vários best-sellers de suspense.
                data_nasc:
                  type: string
                  format: date
                  example: 1980-05-15
                nacionalidade:
                  type: string
                  example: Brasileiro
      responses:
        '201':
          description: Author created successfully
        '400':
          description: Invalid input
    get:
      summary: Get a list of authors
      responses:
        '200':
          description: A list of authors
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    nome:
                      type: string
                    bio:
                      type: string
                    data_nasc:
                      type: string
                      format: date
                    nacionalidade:
                      type: string
  /api/autores/buscar:
    get:
      summary: Search for an author by name
      parameters:
        - in: query
          name: nome
          schema:
            type: string
          required: true
          example: João Silva
      responses:
        '200':
          description: Author details
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  nome:
                    type: string
                  bio:
                    type: string
                  data_nasc:
                    type: string
                    format: date
                  nacionalidade:
                    type: string
        '404':
          description: Author not found
  /api/autores/{id}:
    put:
      summary: Update an author's details
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                bio:
                  type: string
                  example: Autor de vários best-sellers de suspense e drama.
      responses:
        '200':
          description: Author updated successfully
        '404':
          description: Author not found
    delete:
      summary: Delete an author
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Author deleted successfully
        '404':
          description: Author not found
  /api/livros:
    post:
      summary: Create a new book
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                titulo:
                  type: string
                  example: A New Book
                descricao:
                  type: string
                  example: A thrilling new book.
                autor_id:
                  type: integer
                  example: 1
                ano_publicacao:
                  type: integer
                  example: 2021
                genero:
                  type: string
                  example: Thriller
                quantidade:
                  type: integer
                  example: 100
      responses:
        '201':
          description: Book created successfully
        '400':
          description: Invalid input
    get:
      summary: Get a list of books
      responses:
        '200':
          description: A list of books
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    titulo:
                      type: string
                    descricao:
                      type: string
                    autor_id:
                      type: integer
                    ano_publicacao:
                      type: integer
                    genero:
                      type: string
                    quantidade:
                      type: integer
  /api/livros/{id}:
    put:
      summary: Update a book's details
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                titulo:
                  type: string
                  example: Updated Book Title
                descricao:
                  type: string
                  example: Updated book description.
      responses:
        '200':
          description: Book updated successfully
        '404':
          description: Book not found
    delete:
      summary: Delete a book
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Book deleted successfully
        '404':
          description: Book not found
